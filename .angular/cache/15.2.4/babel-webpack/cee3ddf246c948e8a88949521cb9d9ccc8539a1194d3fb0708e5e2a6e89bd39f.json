{"ast":null,"code":"import { Tarefa } from '../shared';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = [\"formTarefa\"];\nfunction CadastrarTarefaComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\", 12);\n    i0.ɵɵtext(2, \" Digite a tarefa. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 12);\n    i0.ɵɵtext(4, \" A tarefa deve conter ao menos 5 caracteres. \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", !_r1.errors.required);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", !_r1.errors.minlength);\n  }\n}\nconst _c1 = function () {\n  return [\"/tarefas\"];\n};\nexport class CadastrarTarefaComponent {\n  constructor(tarefaService, router) {\n    this.tarefaService = tarefaService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.tarefa = new Tarefa();\n  }\n  cadastrar(nome) {\n    if (this.formTarefa.form.valid) {\n      this.tarefaService.cadastrar(nome);\n      // this.router.navigate([\"/tarefas\"]);\n      this.tarefaService.listarTodos().subscribe(res => this.Listar, this.tarefas = res);\n      location.href = \"/tarefas\";\n    }\n  }\n}\nCadastrarTarefaComponent.ɵfac = function CadastrarTarefaComponent_Factory(t) {\n  return new (t || CadastrarTarefaComponent)(i0.ɵɵdirectiveInject(i1.TarefaService), i0.ɵɵdirectiveInject(i2.Router));\n};\nCadastrarTarefaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CadastrarTarefaComponent,\n  selectors: [[\"app-cadastrar\"]],\n  viewQuery: function CadastrarTarefaComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formTarefa = _t.first);\n    }\n  },\n  decls: 16,\n  vars: 5,\n  consts: [[1, \"well\"], [\"formTarefa\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"nome\"], [\"type\", \"text\", \"id\", \"nome\", \"name\", \"nome\", \"minlength\", \"5\", \"required\", \"\", \"autocomplete\", \"off\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"nome\", \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"form-group\", \"text-center\"], [\"type\", \"submit\", \"value\", \"Cadastrar\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"], [1, \"btn\", \"btn-default\", 3, \"routerLink\"], [\"aria-hidden\", \"true\", 1, \"glyphicon\", \"glyphicon-chevron-left\"], [1, \"alert\", \"alert-danger\"], [3, \"hidden\"]],\n  template: function CadastrarTarefaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Cadastrar tarefa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", null, 1)(5, \"div\", 2)(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Tarefa:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4, 5);\n      i0.ɵɵlistener(\"ngModelChange\", function CadastrarTarefaComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.tarefa.nome = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, CadastrarTarefaComponent_div_10_Template, 5, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 7)(12, \"input\", 8);\n      i0.ɵɵlistener(\"click\", function CadastrarTarefaComponent_Template_input_click_12_listener() {\n        return ctx.cadastrar(ctx.tarefa.nome);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"a\", 9);\n      i0.ɵɵelement(14, \"span\", 10);\n      i0.ɵɵtext(15, \" Voltar \");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(4);\n      const _r1 = i0.ɵɵreference(9);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.tarefa.nome);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.errors && (_r1.dirty || _r1.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c1));\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.NgModel, i4.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,MAAM,QAAuB,WAAW;;;;;;;;;ICKrCC,+BAAoF;IAE5EA,kCACJ;IAAAA,iBAAM;IACNA,+BAAuC;IACnCA,6DACJ;IAAAA,iBAAM;;;;;IALDA,eAAgC;IAAhCA,6CAAgC;IAGhCA,eAAiC;IAAjCA,8CAAiC;;;;;;ADDtD,OAAM,MAAOC,wBAAwB;EAKnCC,YACUC,aAA4B,EAC5BC,MAAc;IADd,kBAAa,GAAbD,aAAa;IACb,WAAM,GAANC,MAAM;EAAU;EAExBC,QAAQ;IACJ,IAAI,CAACC,MAAM,GAAG,IAAIP,MAAM,EAAE;EAC9B;EAEAQ,SAAS,CAACC,IAAY;IACpB,IAAI,IAAI,CAACC,UAAU,CAACC,IAAI,CAACC,KAAK,EAAE;MAC9B,IAAI,CAACR,aAAa,CAACI,SAAS,CAACC,IAAI,CAAC;MAClC;MACA,IAAI,CAACL,aAAa,CAACS,WAAW,EAAE,CAACC,SAAS,CAACC,GAAG,IAAI,IAAI,CAACC,MAAM,EAAC,IAAI,CAACC,OAAO,GAAGF,GAAG,CAAC;MAEjFG,QAAQ,CAACC,IAAI,GAAE,UAAU;;EAE7B;;AArBSjB,wBAAwB;mBAAxBA,wBAAwB;AAAA;AAAxBA,wBAAwB;QAAxBA,wBAAwB;EAAAkB;EAAAC;IAAA;;;;;;;;;;;;;MCVrCpB,0BAAI;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzBA,8BAAkB;MAGYA,uBAAO;MAAAA,iBAAQ;MACjCA,mCAAkJ;MAA3IA;QAAA;MAAA,EAAyB;MAAhCA,iBAAkJ;MAClJA,2EAOM;MACVA,iBAAM;MACNA,+BAAoC;MACmEA;QAAA,OAASqB,8BAAsB;MAAA,EAAC;MAAnIrB,iBAAoI;MACpIA,6BAAuD;MAACA,4BAAyE;MAACA,yBAAO;MAAAA,iBAAI;;;;;MAZtIA,eAAyB;MAAzBA,yCAAyB;MAC1BA,eAAiD;MAAjDA,+DAAiD;MAUQA,eAAmC;MAAnCA,0CAAmC;MAC/FA,eAA2B;MAA3BA,uDAA2B","names":["Tarefa","i0","CadastrarTarefaComponent","constructor","tarefaService","router","ngOnInit","tarefa","cadastrar","nome","formTarefa","form","valid","listarTodos","subscribe","res","Listar","tarefas","location","href","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/home/persisti/Área de Trabalho/projetoSpring/Gerenciador-de-tarefas/src/app/tarefas/cadastrar/cadastrar-tarefa.component.ts","/home/persisti/Área de Trabalho/projetoSpring/Gerenciador-de-tarefas/src/app/tarefas/cadastrar/cadastrar-tarefa.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Tarefa, TarefaService } from '../shared';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar-tarefa.component.html',\n  styleUrls: ['./cadastrar-tarefa.component.css']\n})\nexport class CadastrarTarefaComponent implements OnInit{\n\n  @ViewChild(\"formTarefa\", {static: true}) formTarefa: NgForm;\n  tarefa: Tarefa;\n\n  constructor(\n    private tarefaService: TarefaService,\n    private router: Router){}\n\n    ngOnInit(){\n        this.tarefa = new Tarefa();\n    }\n\n    cadastrar(nome: string): void {\n      if (this.formTarefa.form.valid) {\n        this.tarefaService.cadastrar(nome);\n        // this.router.navigate([\"/tarefas\"]);\n        this.tarefaService.listarTodos().subscribe(res => this.Listar this.tarefas = res);\n\n        location.href =\"/tarefas\";\n      }\n    }\n}\n","<h1>Cadastrar tarefa</h1>\n\n<div class=\"well\">\n    <form #formTarefa=\"ngForm\">\n        <div class=\"form-group\">\n            <label for=\"nome\">Tarefa:</label>\n            <input [(ngModel)]=\"tarefa.nome\" #nome=\"ngModel\" type=\"text\" class=\"form-control\" id=\"nome\" name=\"nome\" minlength=\"5\" required autocomplete=\"off\"> \n            <div *ngIf=\"nome.errors && (nome.dirty || nome.touched)\" class=\"alert alert-danger\">\n                <div [hidden]=\"!nome.errors.required\">\n                    Digite a tarefa.\n                </div>\n                <div [hidden]=\"!nome.errors.minlength\">\n                    A tarefa deve conter ao menos 5 caracteres.\n                </div>\n            </div>\n        </div>\n        <div class=\"form-group text-center\">\n            <input type=\"submit\" class=\"btn btn-success\" value=\"Cadastrar\" [disabled]=\"!formTarefa.form.valid\" (click)=\"cadastrar(tarefa.nome)\">\n            <a [routerLink]=\"['/tarefas']\" class=\"btn btn-default\"> <span class=\"glyphicon glyphicon-chevron-left\" aria-hidden=\"true\"></span> Voltar </a>\n        </div>\n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}