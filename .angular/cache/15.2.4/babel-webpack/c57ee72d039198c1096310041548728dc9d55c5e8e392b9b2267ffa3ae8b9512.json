{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../shared/tarefa-concluida.directive\";\nfunction ListarTarefaComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 8)(4, \"input\", 9);\n    i0.ɵɵlistener(\"click\", function ListarTarefaComponent_tr_12_Template_input_click_4_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const tarefa_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.alterarStatus($event, tarefa_r2));\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\", 10)(6, \"a\", 11);\n    i0.ɵɵlistener(\"click\", function ListarTarefaComponent_tr_12_Template_a_click_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const tarefa_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.remover($event, tarefa_r2));\n    });\n    i0.ɵɵelement(7, \"span\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tarefa_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"danger\", !tarefa_r2.concluida);\n    i0.ɵɵproperty(\"tarefaConcluida\", tarefa_r2.concluida);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tarefa_r2.nome, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", tarefa_r2.id)(\"checked\", tarefa_r2.concluida);\n  }\n}\nfunction ListarTarefaComponent_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \" Nenhuma tarefa cadastrada. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function () {\n  return [\"/tarefas/cadastrar\"];\n};\nexport class ListarTarefaComponent {\n  constructor(tarefaService) {\n    this.tarefaService = tarefaService;\n  }\n  ngOnInit() {\n    this.tarefaService.listarTodos().subscribe(res => this.tarefas = res);\n    setInterval(() => {\n      this.tarefaService.listarTodos().subscribe(res => this.tarefas = res);\n    }, 1000);\n  }\n  listarTodos() {\n    return this.tarefaService.listarTodos();\n  }\n  remover($event, tarefa) {\n    $event.preventDefault();\n    if (confirm(\"Deseja remover a tarefa \" + tarefa.nome + \" ?\")) {\n      this.tarefaService.remover(tarefa.id);\n    }\n  }\n  alterarStatus($event, tarefa) {\n    $event.preventDefault();\n    this.tarefaService.alterarStatus(tarefa.id);\n  }\n}\nListarTarefaComponent.ɵfac = function ListarTarefaComponent_Factory(t) {\n  return new (t || ListarTarefaComponent)(i0.ɵɵdirectiveInject(i1.TarefaService));\n};\nListarTarefaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListarTarefaComponent,\n  selectors: [[\"app-listar-tarefa\"]],\n  decls: 14,\n  vars: 4,\n  consts: [[1, \"table\", \"table-striped\", \"table-bordered\", \"table-hover\"], [2, \"font-size\", \"22px\"], [1, \"text-center\"], [3, \"routerLink\"], [\"id\", \"novo\", \"aria-hidden\", \"true\", 1, \"glyphicon\", \"glyphicon-pencil\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [2, \"font-size\", \"20px\", 3, \"tarefaConcluida\"], [1, \"text-center\", 2, \"width\", \"70px\"], [\"type\", \"checkbox\", 3, \"value\", \"checked\", \"click\"], [1, \"text-center\", 2, \"width\", \"200px\"], [\"href\", \"#\", 3, \"click\"], [\"aria-hidden\", \"true\", \"id\", \"deletar\", 1, \"glyphicon\", \"glyphicon-trash\"]],\n  template: function ListarTarefaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Tarefas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"tbody\")(4, \"tr\")(5, \"th\", 1);\n      i0.ɵɵtext(6, \"Tarefas <>\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\");\n      i0.ɵɵtext(8, \"Conclu\\u00EDda\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 2)(10, \"a\", 3);\n      i0.ɵɵelement(11, \"span\", 4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(12, ListarTarefaComponent_tr_12_Template, 8, 6, \"tr\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(13, ListarTarefaComponent_p_13_Template, 2, 0, \"p\", 6);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tarefas);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.tarefas.length == 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.TarefaConcluidaDirective],\n  styles: [\"#novo[_ngcontent-%COMP%]{\\n    color: green;\\n    font-size: 30px;\\n}\\n\\n#deletar[_ngcontent-%COMP%]{\\n    color: rgb(196, 26, 26);\\n    font-size: 30px;\\n}\\n\\n#novo[_ngcontent-%COMP%]:hover{\\n    transition-duration: .7s;\\n    transform: rotate(360deg);\\n    text-shadow: 0 0 3px #32CD32, 0 0 3px #32CD32, 0 0 3px #32CD32, 0 0 3px #32CD32, 0 0 6px #32CD32, 0 0 3px #32CD32, 0 0 3px #32CD32;\\n}\\n\\n#deletar[_ngcontent-%COMP%]:hover, #deletar[_ngcontent-%COMP%]::selection{\\n    transform: rotate(360deg);\\n    transition-duration: .7s;\\n}\\n\\n.glyphicon[_ngcontent-%COMP%]{\\n    font-size: 30px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFyZWZhcy9saXN0YXIvbGlzdGFyLXRhcmVmYS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx1QkFBdUI7SUFDdkIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4Qix5QkFBeUI7SUFDekIsa0lBQWtJO0FBQ3RJOztBQUVBO0lBQ0kseUJBQXlCO0lBQ3pCLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLGVBQWU7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyIjbm92b3tcbiAgICBjb2xvcjogZ3JlZW47XG4gICAgZm9udC1zaXplOiAzMHB4O1xufVxuXG4jZGVsZXRhcntcbiAgICBjb2xvcjogcmdiKDE5NiwgMjYsIDI2KTtcbiAgICBmb250LXNpemU6IDMwcHg7XG59XG5cbiNub3ZvOmhvdmVye1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IC43cztcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICAgIHRleHQtc2hhZG93OiAwIDAgM3B4ICMzMkNEMzIsIDAgMCAzcHggIzMyQ0QzMiwgMCAwIDNweCAjMzJDRDMyLCAwIDAgM3B4ICMzMkNEMzIsIDAgMCA2cHggIzMyQ0QzMiwgMCAwIDNweCAjMzJDRDMyLCAwIDAgM3B4ICMzMkNEMzI7XG59XG5cbiNkZWxldGFyOmhvdmVyLCAjZGVsZXRhcjo6c2VsZWN0aW9ue1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDM2MGRlZyk7XG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogLjdzO1xufVxuXG4uZ2x5cGhpY29ue1xuICAgIGZvbnQtc2l6ZTogMzBweDtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAWQA,0BAAmC;IAE3BA,YACJ;IAAAA,iBAAK;IACLA,6BAA4C;IACjCA;MAAA;MAAA;MAAA;MAAA,OAASA,sDAA6B;IAAA,EAAC;IAA9CA,iBAAgH;IAEpHA,8BAA6C;IACtCA;MAAA;MAAA;MAAA;MAAA,OAASA,gDAAuB;IAAA,EAAC;IAAWA,2BAA+E;IAAAA,iBAAI;;;;IAP7FA,eAAkC;IAAlCA,8CAAkC;IAAvEA,qDAAoC;IACpCA,eACJ;IADIA,+CACJ;IAEmEA,eAAmB;IAAnBA,oCAAmB;;;;;IASlGA,yBAA6B;IAACA,4CAA2B;IAAAA,iBAAI;;;;;;ACjB7D,OAAM,MAAOC,qBAAqB;EAIhCC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;EAAkB;EAEnDC,QAAQ;IACJ,IAAI,CAACD,aAAa,CAACE,WAAW,EAAE,CAACC,SAAS,CAACC,GAAG,IAAI,IAAI,CAACC,OAAO,GAAGD,GAAG,CAAC;IACrEE,WAAW,CAAC,MAAI;MACd,IAAI,CAACN,aAAa,CAACE,WAAW,EAAE,CAACC,SAAS,CAACC,GAAG,IAAI,IAAI,CAACC,OAAO,GAAGD,GAAG,CAAC;IACvE,CAAC,EAAE,IAAI,CAAC;EACZ;EAEAF,WAAW;IACT,OAAO,IAAI,CAACF,aAAa,CAACE,WAAW,EAAE;EACzC;EAEAK,OAAO,CAACC,MAAW,EAAEC,MAAc;IACjCD,MAAM,CAACE,cAAc,EAAE;IACvB,IAAIC,OAAO,CAAC,0BAA0B,GAAEF,MAAM,CAACG,IAAI,GAAE,IAAI,CAAC,EAAE;MAC1D,IAAI,CAACZ,aAAa,CAACO,OAAO,CAACE,MAAM,CAACI,EAAE,CAAC;;EAEzC;EAEAC,aAAa,CAACN,MAAW,EAACC,MAAc;IACtCD,MAAM,CAACE,cAAc,EAAE;IACvB,IAAI,CAACV,aAAa,CAACc,aAAa,CAACL,MAAM,CAACI,EAAE,CAAC;EAC7C;;AA3BWf,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRlCtB,0BAAI;MAAAA,uBAAO;MAAAA,iBAAK;MAEhBA,gCAA8D;MAGrBA,0BAAgB;MAAAA,iBAAK;MAClDA,0BAAI;MAAAA,8BAAS;MAAAA,iBAAK;MAClBA,6BAAwB;MACqBA,2BAA6E;MAAAA,iBAAI;MAGlIA,sEAUK;MACTA,iBAAQ;MAGZA,oEAA6D;;;MAjB1CA,gBAAqC;MAArCA,uDAAqC;MAGzBA,eAAU;MAAVA,qCAAU;MAcrCA,eAAuB;MAAvBA,8CAAuB","names":["i0","ListarTarefaComponent","constructor","tarefaService","ngOnInit","listarTodos","subscribe","res","tarefas","setInterval","remover","$event","tarefa","preventDefault","confirm","nome","id","alterarStatus","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/persisti/Área de Trabalho/projetoSpring/Gerenciador-de-tarefas/src/app/tarefas/listar/listar-tarefa.component.html","/home/persisti/Área de Trabalho/projetoSpring/Gerenciador-de-tarefas/src/app/tarefas/listar/listar-tarefa.component.ts"],"sourcesContent":["<h1>Tarefas</h1>\n\n<table class=\"table table-striped table-bordered table-hover\">\n    <tbody>\n        <tr>\n            <th style=\"font-size: 22px;\">Tarefas &lt;&gt;</th>\n            <th>Concluída</th>\n            <th class=\"text-center\">\n                <a [routerLink]=\"['/tarefas/cadastrar']\"><span class=\"glyphicon glyphicon-pencil\" id=\"novo\" aria-hidden=\"true\"></span></a>\n            </th>\n        </tr>\n        <tr *ngFor=\"let tarefa of tarefas\">\n            <td [tarefaConcluida]=\"tarefa.concluida\" [class.danger]=\"!tarefa.concluida\" style=\"font-size: 20px;\">\n                {{ tarefa.nome }} \n            </td>\n            <td style=\"width: 70px\" class=\"text-center\">\n                <input (click)=\"alterarStatus($event, tarefa)\" type=\"checkbox\" [value]=\"tarefa.id\" [checked]=\"tarefa.concluida\">\n            </td>\n            <td class=\"text-center\" style=\"width: 200px\">\n                <a (click)=\"remover($event, tarefa)\" href=\"#\"> <span class=\"glyphicon glyphicon-trash\" aria-hidden=\"true\" id=\"deletar\"></span></a>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<p *ngIf=\"tarefas.length==0\"> Nenhuma tarefa cadastrada. </p>","import { Component, OnInit } from '@angular/core';\nimport { Tarefa, TarefaService } from '../shared';\n\n@Component({\n  selector: 'app-listar-tarefa',\n  templateUrl: './listar-tarefa.component.html',\n  styleUrls: ['./listar-tarefa.component.css']\n})\nexport class ListarTarefaComponent implements OnInit {\n\n  tarefas: Tarefa[];\n\n  constructor(private tarefaService: TarefaService) {}\n\n  ngOnInit(){\n      this.tarefaService.listarTodos().subscribe(res => this.tarefas = res);\n      setInterval(()=>{\n        this.tarefaService.listarTodos().subscribe(res => this.tarefas = res);\n      }, 1000);\n  }\n\n  listarTodos(){\n    return this.tarefaService.listarTodos();\n  }\n\n  remover($event: any, tarefa: Tarefa): void{\n    $event.preventDefault();\n    if (confirm(\"Deseja remover a tarefa \" +tarefa.nome+ \" ?\")) {\n      this.tarefaService.remover(tarefa.id);\n    }\n  }\n\n  alterarStatus($event: any,tarefa: Tarefa): void{\n    $event.preventDefault();\n    this.tarefaService.alterarStatus(tarefa.id);\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}