{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TarefaService {\n  constructor(http) {\n    this.http = http;\n    this.URL = \"http://localhost:8080/tarefas\";\n  }\n  listarTodos() {\n    return this.http.get(this.URL);\n  }\n}\nTarefaService.ɵfac = function TarefaService_Factory(t) {\n  return new (t || TarefaService)(i0.ɵɵinject(i1.HttpClient));\n};\nTarefaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TarefaService,\n  factory: TarefaService.ɵfac\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFP,QAAG,GAAG,+BAA+B;EAEd;EAExCC,WAAW;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAkB,IAAI,CAACC,GAAG,CAAC;EAChD;;AARWL,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAM,SAAbN,aAAa;AAAA","names":["TarefaService","constructor","http","listarTodos","get","URL","factory"],"sourceRoot":"","sources":["/home/persisti/Área de Trabalho/projetoSpring/Gerenciador-de-tarefas/src/app/tarefas/shared/tarefa.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\"\nimport { Tarefa, ResponseTarefas } from './';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TarefaService {\n\n  private readonly URL = \"http://localhost:8080/tarefas\"\n\n  constructor(private http: HttpClient) { }\n\n  listarTodos(): Observable<Tarefas>{\n  \treturn this.http.get<ResponseTarefas>(this.URL);\n  }\n\n  // cadastrar(tarefa: Tarefa): void {\n  // \tconst tarefas = this.listarTodos();\n  // \ttarefa.id = new Date().getTime();\n  // \ttarefas.push(tarefa);\n  // \tlocalStorage['tarefas'] = JSON.stringify(tarefas);\n  // }\n\n  // buscarPorId(id: number): Tarefa {\n  //   const tarefas: Tarefa[] = this.listarTodos();\n  //   return tarefas.find(tarefa => tarefa.id === id);\n  // }\n\n  // atualizar(tarefa: Tarefa): void {\n  //   const tarefas: Tarefa[] = this.listarTodos();\n  //   tarefas.forEach((obj, index, objs) => { \n  //     if (tarefa.id === obj.id) {\n  //       objs[index] = tarefa;\n  //     }\n  //   });\n  //   localStorage['tarefas'] = JSON.stringify(tarefas);\n  // }\n\n  // remover(id: number): void {\n  //   let tarefas: Tarefa[] = this.listarTodos();\n  //   tarefas = tarefas.filter(tarefa => tarefa.id !== id);\n  //   localStorage['tarefas'] = JSON.stringify(tarefas);\n  // }\n\n  // alterarStatus(id: number): void {\n  //   const tarefas: Tarefa[] = this.listarTodos();\n  //   tarefas.forEach((obj, index, objs) => { \n  //     if (id === obj.id) {\n  //       objs[index].concluida = !obj.concluida;\n  //     }\n  //   });\n  //   localStorage['tarefas'] = JSON.stringify(tarefas);\n  // }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}