{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TarefaService {\n  constructor(http) {\n    this.http = http;\n    this.URL = \"http://localhost:8080/api/tarefas\";\n  }\n  listarTodos() {\n    return this.http.get(this.URL);\n  }\n  cadastrar(nome) {\n    this.http.post(this.URL, nome).subscribe(() => {});\n  }\n  remover(id) {\n    this.http.delete(this.URL + `/${id}`);\n  }\n}\nTarefaService.ɵfac = function TarefaService_Factory(t) {\n  return new (t || TarefaService)(i0.ɵɵinject(i1.HttpClient));\n};\nTarefaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TarefaService,\n  factory: TarefaService.ɵfac\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFP,QAAG,GAAG,mCAAmC;EAElB;EAExCC,WAAW;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,IAAI,CAACC,GAAG,CAAC;EACzC;EAEAC,SAAS,CAACC,IAAY;IACrB,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACH,GAAG,EAAEE,IAAI,CAAC,CAACE,SAAS,CAAC,MAAK,CAAE,CAAC,CAAC;EACnD;EAEAC,OAAO,CAACC,EAAU;IAChB,IAAI,CAACT,IAAI,CAACU,MAAM,CAAC,IAAI,CAACP,GAAG,GAAE,IAAIM,EAAE,EAAE,CAAC;EACtC;;AAhBWX,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAa,SAAbb,aAAa;AAAA","names":["TarefaService","constructor","http","listarTodos","get","URL","cadastrar","nome","post","subscribe","remover","id","delete","factory"],"sourceRoot":"","sources":["/home/persisti/Área de Trabalho/projetoSpring/Gerenciador-de-tarefas/src/app/tarefas/shared/tarefa.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\"\nimport { Tarefa, ResponseTarefas } from './';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TarefaService {\n\n  private readonly URL = \"http://localhost:8080/api/tarefas\"\n\n  constructor(private http: HttpClient) { }\n\n  listarTodos(): Observable<Tarefa[]>{\n  \treturn this.http.get<Tarefa[]>(this.URL);\n  }\n\n  cadastrar(nome: String): void {\n  \tthis.http.post(this.URL, nome).subscribe(() => {});\n  }\n  \n  remover(id: number): void {\n    this.http.delete(this.URL+ `/${id}`)\n  }\n\n  // buscarPorId(id: number): Tarefa {\n  //   const tarefas: Tarefa[] = this.listarTodos();\n  //   return tarefas.find(tarefa => tarefa.id === id);\n  // }\n\n  // atualizar(tarefa: Tarefa): void {\n  //   const tarefas: Tarefa[] = this.listarTodos();\n  //   tarefas.forEach((obj, index, objs) => { \n  //     if (tarefa.id === obj.id) {\n  //       objs[index] = tarefa;\n  //     }\n  //   });\n  //   localStorage['tarefas'] = JSON.stringify(tarefas);\n  // }\n\n  \n\n  // alterarStatus(id: number): void {\n  //   const tarefas: Tarefa[] = this.listarTodos();\n  //   tarefas.forEach((obj, index, objs) => { \n  //     if (id === obj.id) {\n  //       objs[index].concluida = !obj.concluida;\n  //     }\n  //   });\n  //   localStorage['tarefas'] = JSON.stringify(tarefas);\n  // }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}